-- Moon Hub V6 for KAT with Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Custom Error Handling and Wrapper Functions
local function safeExec(func)
    local success, result = xpcall(func, function(err) return err end)
    if not success then
        warn("Error: " .. result)
    end
end

-- Task wait for smoother transitions
local function waitFor(time)
    task.wait(time or 0.03)  -- Default wait time is 0.03 seconds
end

-- Hub Interface
local Window = Rayfield:CreateWindow({
    Name = "Moon Hub V6",
    LoadingText = "Loading Moon Hub...",
    Discord = "discord - meowbucks",  -- Fixed Loadstub
    KeySystem = false,  -- No key system
})

-- Silent Aim Logic
local SilentAimEnabled = false
local function SilentAim()
    safeExec(function()
        local players = game:GetService("Players")
        local localPlayer = players.LocalPlayer
        local mouse = localPlayer:GetMouse()

        local function getClosestPlayer()
            local closestDistance = math.huge
            local closestPlayer = nil

            for _, player in pairs(players:GetPlayers()) do
                if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local targetPosition = player.Character.HumanoidRootPart.Position
                    local screenPoint = workspace.CurrentCamera:WorldToScreenPoint(targetPosition)
                    local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(mouse.X, mouse.Y)).Magnitude
                    if distance < closestDistance then
                        closestDistance = distance
                        closestPlayer = player
                    end
                end
            end
            return closestPlayer
        end

        -- Continuously check for closest player and aim
        game:GetService("RunService").RenderStepped:Connect(function()
            if SilentAimEnabled then
                local target = getClosestPlayer()
                if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                    mouse.TargetFilter = target.Character
                    mouse.Hit = target.Character.HumanoidRootPart.CFrame
                end
            end
        end)
    end)
end

-- Silent Aim Toggle
local SilentAimTab = Window:CreateTab("Silent Aim")
SilentAimTab:CreateToggle({
    Name = "Enable Silent Aim",
    Default = false,
    Callback = function(enabled)
        SilentAimEnabled = enabled
        if enabled then
            SilentAim()
        end
    end
})

-- Rainbow FOV Logic
local FOVEnabled = false
local FOVCircle = Drawing.new("Circle")
FOVCircle.Thickness = 2
FOVCircle.NumSides = 100
FOVCircle.Radius = 150
FOVCircle.Filled = false
FOVCircle.Color = Color3.fromRGB(255, 255, 255)
FOVCircle.Visible = false

local function UpdateRainbowFOV()
    safeExec(function()
        local hue = tick() % 5 / 5
        FOVCircle.Color = Color3.fromHSV(hue, 1, 1)
    end)
end

game:GetService("RunService").RenderStepped:Connect(function()
    if FOVEnabled then
        UpdateRainbowFOV()
        FOVCircle.Position = Vector2.new(mouse.X, mouse.Y)
    end
end)

-- FOV Settings
local FOVTab = Window:CreateTab("FOV Settings")
FOVTab:CreateToggle({
    Name = "Enable Rainbow FOV",
    Default = false,
    Callback = function(enabled)
        FOVEnabled = enabled
        FOVCircle.Visible = enabled
    end
})
FOVTab:CreateSlider({
    Name = "FOV Radius",
    Min = 50,
    Max = 500,
    Default = 150,
    Callback = function(value)
        FOVCircle.Radius = value
    end
})

-- Aimbot Logic
local AimbotEnabled = false
local function Aimbot()
    safeExec(function()
        game:GetService("RunService").RenderStepped:Connect(function()
            if AimbotEnabled then
                local target = getClosestPlayer()
                if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.lookAt(
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Position,
                        target.Character.HumanoidRootPart.Position
                    )
                end
            end
        end)
    end)
end

-- Aimbot Toggle
local AimbotTab = Window:CreateTab("Aimbot")
AimbotTab:CreateToggle({
    Name = "Enable Aimbot",
    Default = false,
    Callback = function(enabled)
        AimbotEnabled = enabled
        if enabled then
            Aimbot()
        end
    end
})

-- ESP Logic
local ESPEnabled = false
local function ESP()
    safeExec(function()
        while ESPEnabled do
            for _, player in pairs(game:GetService("Players"):GetPlayers()) do
                if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local billboard = Instance.new("BillboardGui", player.Character.HumanoidRootPart)
                    billboard.Adornee = player.Character.HumanoidRootPart
                    billboard.Size = UDim2.new(0, 200, 0, 50)
                    billboard.AlwaysOnTop = true

                    local label = Instance.new("TextLabel", billboard)
                    label.Size = UDim2.new(1, 0, 1, 0)
                    label.Text = player.Name
                    label.TextColor3 = Color3.fromRGB(255, 0, 0)
                    label.BackgroundTransparency = 1
                end
            end
            waitFor(1)
        end
    end)
end

-- ESP Toggle
local ESPTab = Window:CreateTab("ESP")
ESPTab:CreateToggle({
    Name = "Enable ESP",
    Default = false,
    Callback = function(enabled)
        ESPEnabled = enabled
        if enabled then
            ESP()
        end
    end
})

-- Bunny Hop Logic
local BunnyHopEnabled = false
local function BunnyHop()
    safeExec(function()
        while BunnyHopEnabled do
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            waitFor(0.1)
        end
    end)
end

-- Infinite Jump Logic
local InfiniteJumpEnabled = false
local function InfiniteJump()
    safeExec(function()
        game:GetService("UserInputService").JumpRequest:Connect(function()
            if InfiniteJumpEnabled then
                game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    end)
end

-- Rapid Fire Logic
local RapidFireEnabled = false
local function RapidFire()
    safeExec(function()
        while RapidFireEnabled do
            local gun = game.Players.LocalPlayer.Backpack:FindFirstChild("Gun") or game.Players.LocalPlayer.Character:FindFirstChild("Gun")
            if gun then
                gun.Fire:FireServer()
            end
            waitFor(0.05)  -- Adjust delay as needed for the rapid fire rate
        end
    end)
end

-- Spam Knife Logic
local SpamKnifeEnabled = false
local function SpamKnife()
    safeExec(function()
        while SpamKnifeEnabled do
            local knife = game.Players.LocalPlayer.Backpack:FindFirstChild("Knife") or game.Players.LocalPlayer.Character:FindFirstChild("Knife")
            if knife then
                knife.ThrowKnife:FireServer()  -- Fire the throw knife event
            end
            waitFor(0.1)  -- Adjust delay for how rapidly you want to throw the knife
        end
    end)
end

-- Misc Tab for Bunny Hop, Infinite Jump, Rapid Fire & Spam Knife
local MiscTab = Window:CreateTab("Misc")
MiscTab:CreateToggle({
    Name = "Bunny Hop",
    Default = false,
    Callback = function(enabled)
        BunnyHopEnabled = enabled
        if enabled then
            BunnyHop()
        end
    end
})
MiscTab:CreateToggle({
    Name = "Infinite Jump",
    Default = false,
    Callback = function(enabled)
        InfiniteJumpEnabled = enabled
        if enabled then
            InfiniteJump()
        end
    end
})
MiscTab:CreateToggle({
    Name = "Rapid Fire",
    Default = false,
    Callback = function(enabled)
        RapidFireEnabled = enabled
        if enabled then
            RapidFire()
        end
    end
})
MiscTab:CreateToggle({
    Name = "Spam Knife",
    Default = false,
    Callback = function(enabled)
        SpamKnifeEnabled = enabled
        if enabled then
            SpamKnife()
        end
    end
})

-- Finish Loading
Rayfield:Notify({
    Title = "Moon Hub V6 Loaded",
    Content = "Welcome to Moon Hub for KAT",
    Duration = 5
})